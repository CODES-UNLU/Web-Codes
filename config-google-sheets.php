<?php
/**
 * CONFIGURACI√ìN GOOGLE SHEETS
 * 
 * IMPORTANTE: 
 * 1. Despliega tu Google Apps Script como Web App
 * 2. Copia la URL aqu√≠
 * 3. Configura tu ID de hoja de c√°lculo
 */

// ==================== CONFIGURACI√ìN ====================

// URL de tu Google Apps Script desplegado como Web App
// Obt√©n esta URL despu√©s de desplegar el script
const GOOGLE_SCRIPT_URL = 'https://script.google.com/macros/s/AKfycbymkkxb5ooIn0kqfiJIOBZzJkZCOcPqUKMHRn6BQcIYSRBPJidIDkprq5waXwPZb2jnjw/exec';

// ID de tu hoja de Google Sheets
// Encu√©ntralo en la URL de tu hoja: https://docs.google.com/spreadsheets/d/[ESTE_ES_TU_ID]/edit
const GOOGLE_SHEET_ID = '1gWzL3GrLhwdOfZer_1SRS80Cq13btFq8H2Mm__B-8MU';

// Configuraci√≥n del sorteo
const SORTEO_CONFIG = [
    'precio_giro' => 25,
    'simbolos' => ['üçÄ', 'üíé', 'üçí', 'CODES'],
    'multiplicadores' => [
        'üçÄ' => 3,  // Tr√©bol (3 en l√≠nea)
        'üíé' => 5,  // Diamante (3 en l√≠nea)
        'üçí' => 2,  // Cereza (3 en l√≠nea)
        'CODES' => 10  // CODES (3 en l√≠nea) - JACKPOT
    ]
];

// ==================== FUNCIONES DE INTEGRACI√ìN ====================

/**
 * Env√≠a un giro a Google Sheets
 * @param array $giroData Datos del giro
 * @return array Respuesta de Google Sheets
 */
function enviarGiroAGoogleSheets($giroData) {
    $postData = [
        'action' => 'guardarGiro',
        'data' => $giroData
    ];
    
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, GOOGLE_SCRIPT_URL);
    curl_setopt($ch, CURLOPT_POST, true);
    curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($postData));
    curl_setopt($ch, CURLOPT_HTTPHEADER, [
        'Content-Type: application/json',
        'Content-Length: ' . strlen(json_encode($postData))
    ]);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);
    curl_setopt($ch, CURLOPT_TIMEOUT, 10);
    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
    
    $response = curl_exec($ch);
    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    $error = curl_error($ch);
    curl_close($ch);
    
    if ($error) {
        return [
            'success' => false,
            'error' => 'CURL Error: ' . $error
        ];
    }
    
    if ($httpCode !== 200) {
        return [
            'success' => false,
            'error' => 'HTTP Error: ' . $httpCode,
            'response' => $response
        ];
    }
    
    $decodedResponse = json_decode($response, true);
    return $decodedResponse ?: [
        'success' => false,
        'error' => 'Invalid JSON response',
        'response' => $response
    ];
}

/**
 * Obtiene estad√≠sticas de Google Sheets
 * @return array Estad√≠sticas
 */
function obtenerEstadisticasDeGoogleSheets() {
    $url = GOOGLE_SCRIPT_URL . '?action=obtenerEstadisticas';
    
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_TIMEOUT, 10);
    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
    
    $response = curl_exec($ch);
    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    $error = curl_error($ch);
    curl_close($ch);
    
    if ($error) {
        return [
            'success' => false,
            'error' => 'CURL Error: ' . $error
        ];
    }
    
    if ($httpCode !== 200) {
        return [
            'success' => false,
            'error' => 'HTTP Error: ' . $httpCode,
            'response' => $response
        ];
    }
    
    $decodedResponse = json_decode($response, true);
    return $decodedResponse ?: [
        'success' => false,
        'error' => 'Invalid JSON response',
        'response' => $response
    ];
}

/**
 * Obtiene giros por n√∫mero de pago
 * @param string $paymentNumber N√∫mero de pago
 * @return array Lista de giros
 */
function obtenerGirosPorPagoDeGoogleSheets($paymentNumber) {
    $postData = [
        'action' => 'obtenerGirosPorPago',
        'data' => ['paymentNumber' => $paymentNumber]
    ];
    
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, GOOGLE_SCRIPT_URL);
    curl_setopt($ch, CURLOPT_POST, true);
    curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($postData));
    curl_setopt($ch, CURLOPT_HTTPHEADER, [
        'Content-Type: application/json',
        'Content-Length: ' . strlen(json_encode($postData))
    ]);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);
    curl_setopt($ch, CURLOPT_TIMEOUT, 10);
    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
    
    $response = curl_exec($ch);
    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    $error = curl_error($ch);
    curl_close($ch);
    
    if ($error) {
        return [
            'success' => false,
            'error' => 'CURL Error: ' . $error
        ];
    }
    
    if ($httpCode !== 200) {
        return [
            'success' => false,
            'error' => 'HTTP Error: ' . $httpCode,
            'response' => $response
        ];
    }
    
    $decodedResponse = json_decode($response, true);
    return $decodedResponse ?: [
        'success' => false,
        'error' => 'Invalid JSON response',
        'response' => $response
    ];
}

/**
 * Prueba la conexi√≥n con Google Sheets
 * @return array Resultado de la prueba
 */
function probarConexionGoogleSheets() {
    $url = GOOGLE_SCRIPT_URL . '?action=obtenerInfoSistema';
    
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_TIMEOUT, 10);
    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
    
    $response = curl_exec($ch);
    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    $error = curl_error($ch);
    curl_close($ch);
    
    if ($error) {
        return [
            'success' => false,
            'error' => 'CURL Error: ' . $error,
            'message' => 'No se pudo conectar con Google Sheets'
        ];
    }
    
    if ($httpCode !== 200) {
        return [
            'success' => false,
            'error' => 'HTTP Error: ' . $httpCode,
            'message' => 'Error de conexi√≥n con Google Sheets',
            'response' => $response
        ];
    }
    
    $decodedResponse = json_decode($response, true);
    
    if (!$decodedResponse || !$decodedResponse['success']) {
        return [
            'success' => false,
            'error' => 'Invalid response',
            'message' => 'Respuesta inv√°lida de Google Sheets',
            'response' => $response
        ];
    }
    
    return [
        'success' => true,
        'message' => 'Conexi√≥n exitosa con Google Sheets',
        'data' => $decodedResponse
    ];
}

// ==================== FUNCI√ìN DE PRUEBA ====================

/**
 * Funci√≥n para probar la integraci√≥n completa
 */
function probarIntegracionCompleta() {
    echo "<h2>üß™ Prueba de Integraci√≥n Google Sheets</h2>\n";
    
    // 1. Probar conexi√≥n
    echo "<h3>1. Probando conexi√≥n...</h3>\n";
    $conexion = probarConexionGoogleSheets();
    if ($conexion['success']) {
        echo "‚úÖ <strong>Conexi√≥n exitosa:</strong> " . $conexion['message'] . "<br>\n";
    } else {
        echo "‚ùå <strong>Error de conexi√≥n:</strong> " . $conexion['error'] . "<br>\n";
        return;
    }
    
    // 2. Probar env√≠o de giro
    echo "<h3>2. Probando env√≠o de giro...</h3>\n";
    $giroPrueba = [
        'timestamp' => date('c'),
        'paymentNumber' => 'TEST_' . time(),
        'symbol1' => 'üçÑ',
        'symbol2' => 'üçÑ',
        'symbol3' => 'üçÑ',
        'ip' => $_SERVER['REMOTE_ADDR'] ?? '127.0.0.1',
        'userAgent' => $_SERVER['HTTP_USER_AGENT'] ?? 'Test User Agent'
    ];
    
    $resultadoGiro = enviarGiroAGoogleSheets($giroPrueba);
    if ($resultadoGiro['success']) {
        echo "‚úÖ <strong>Giro enviado exitosamente:</strong> " . $resultadoGiro['message'] . "<br>\n";
        echo "ID del giro: " . $resultadoGiro['giroId'] . "<br>\n";
    } else {
        echo "‚ùå <strong>Error enviando giro:</strong> " . $resultadoGiro['error'] . "<br>\n";
    }
    
    // 3. Probar estad√≠sticas
    echo "<h3>3. Probando estad√≠sticas...</h3>\n";
    $estadisticas = obtenerEstadisticasDeGoogleSheets();
    if ($estadisticas['success']) {
        echo "‚úÖ <strong>Estad√≠sticas obtenidas:</strong><br>\n";
        echo "Total de giros: " . $estadisticas['totalGiros'] . "<br>\n";
        echo "Giros ganadores: " . $estadisticas['girosGanadores'] . "<br>\n";
        echo "Tasa de ganancia: " . $estadisticas['tasaGanancia'] . "%<br>\n";
    } else {
        echo "‚ùå <strong>Error obteniendo estad√≠sticas:</strong> " . $estadisticas['error'] . "<br>\n";
    }
    
    echo "<h3>üéâ Prueba completada</h3>\n";
}

// ==================== INSTRUCCIONES ====================

/**
 * INSTRUCCIONES DE CONFIGURACI√ìN:
 * 
 * 1. CONFIGURAR GOOGLE SHEETS:
 *    - Crear una nueva hoja de c√°lculo
 *    - Copiar el ID de la hoja desde la URL
 *    - Reemplazar 'TU_SHEET_ID_AQUI' arriba
 * 
 * 2. CONFIGURAR GOOGLE APPS SCRIPT:
 *    - Ir a script.google.com
 *    - Crear nuevo proyecto
 *    - Pegar el c√≥digo de sorteo-giros.gs
 *    - Reemplazar 'TU_SPREADSHEET_ID_AQUI' en el script
 *    - Guardar y ejecutar setup()
 * 
 * 3. DESPLEGAR COMO WEB APP:
 *    - En Apps Script, ir a Desplegar > Nueva implementaci√≥n
 *    - Tipo: Aplicaci√≥n web
 *    - Ejecutar como: Yo
 *    - Acceso: Cualquier usuario
 *    - Copiar la URL de la aplicaci√≥n web
 *    - Reemplazar 'TU_SCRIPT_ID_AQUI' arriba
 * 
 * 4. PROBAR INTEGRACI√ìN:
 *    - Ejecutar probarIntegracionCompleta() en tu navegador
 *    - Verificar que todo funcione correctamente
 * 
 * 5. INTEGRAR CON TU SISTEMA:
 *    - Los datos se enviar√°n autom√°ticamente a Google Sheets
 *    - Puedes consultar estad√≠sticas en tiempo real
 *    - Los datos se respaldan autom√°ticamente
 */
?>
